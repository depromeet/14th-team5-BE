plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation project(':member')
    implementation project(':family')
    implementation project(':post')
    implementation project(':mission')

    jacocoAggregation project(':common')
    jacocoAggregation project(':member')
    jacocoAggregation project(':family')
    jacocoAggregation project(':post')
    jacocoAggregation project(':mission')

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('bootJar') {
    enabled = true
}

tasks.named('jar') {
    enabled = true
}

jib {
    def imageTag = System.getenv("IMAGE_TAG")
    def serverPort = "8080"
    def activeProfile = System.getenv("ACTIVE_PROFILE")
    def imageName = System.getenv("IMAGE_NAME")
    from {
        image = 'amazoncorretto:17-alpine3.17-jdk'
    }
    to {
        image = imageName + ':latest'
        tags = ['latest', imageTag]
    }
    container {
        jvmFlags = [
                '-Dspring.profiles.active=' + activeProfile,
                '-Dserver.port=' + serverPort,
                '-Xms3400M',
                '-Xmx3400M',
                '-XX:+UseG1GC',
                '-XX:+UseContainerSupport',
                '-XX:MaxGCPauseMillis=400',
                '-XX:+DisableExplicitGC',
                '-XX:+AlwaysPreTouch', //미리 영역 채우기
                '-Duser.timezone=Asia/Seoul', //타임존
                '-Dfile.encoding=UTF-8',
                '-server'
        ]
        ports = [serverPort]
    }
}
